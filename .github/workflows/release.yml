name: Release

on:
  milestone:
    types: closed

jobs:
  release:
    if: github.event.milestone.open_issues == 0 && contains(github.event.milestone.description, 'âœ”')
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout sources'
        uses: actions/checkout@v2

      - name: 'Configure git user'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: 'Set up Java (bintray)'
        uses: actions/setup-java@v1
        with: # https://github.com/actions/setup-java#publishing-using-apache-maven
          java-version: 14
          server-id: bintray-sormuras-maven
          server-username: BINTRAY_USERNAME
          server-password: BINTRAY_PASSWORD

      - name: 'Configure environment variables'
        run: |
          echo "github.actor=${{ github.actor }}"
          echo "github.sha=${{ github.sha }}"
          echo "github.event.milestone.number=${{ github.event.milestone.number }}"
          echo "github.event.milestone.title=${{ github.event.milestone.title }}"
          echo "github.event.milestone.closed_issues=${{ github.event.milestone.closed_issues }}"
          echo ::set-env name=PREVIOUS::$(java src/bach/Version.java)
          echo ::set-env name=VERSION::${{ github.event.milestone.title }}

      - name: 'Set version, show diff, and build Bach.java'
        run: |
          java src/bach/Version.java ${VERSION}
          git diff
          java --show-version .bach/src/build/build/Bootstrap.java

      - name: 'Commit all changed files, tag, and push origin'
        run: |
          git commit --all --message "Release ${VERSION}"
          git tag ${VERSION}
          git push origin master --tags

      - name: 'Create release (github)'
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${VERSION}
          release_name: Release ${VERSION}
          body: ${{ github.event.milestone.description }}
          draft: false
          prerelease: false

      - name: 'Upload module to release (github)'
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: .bach/workspace/modules/main/de.sormuras.bach@${VERSION}.jar
          asset_name: de.sormuras.bach@${VERSION}.jar
          asset_content_type: application/java-archive

      - name: 'Restore previous version from environment variable'
        run: |
          java src/bach/Version.java ${PREVIOUS}
          git commit --all --message "Back to development of version ${PREVIOUS}"
          git push origin master

      - name: 'Publish to Bintray'
        env:
          BINTRAY_USERNAME: bintray-sormuras-maven
          BINTRAY_PASSWORD: ${{ secrets.BINTRAY_KEY }}
          DEPLOY: '--batch-mode --no-transfer-progress org.apache.maven.plugins:maven-deploy-plugin:3.0.0-M1:deploy-file'
          REPOSITORY: '-DrepositoryId=bintray-sormuras-maven -Durl=https://api.bintray.com/maven/sormuras/maven/bach/;publish=1'
        run: |
          POM="-DpomFile=src/de.sormuras.bach/main/maven/pom.xml"
          JAR="-Dfile=.bach/workspace/modules/main/de.sormuras.bach@${VERSION}.jar"
          SRC="-Dsources=.bach/workspace/sources/main/de.sormuras.bach@${VERSION}-sources.jar"
          DOC="-Djavadoc=.bach/workspace/documentation/api@${VERSION}-javadoc.jar"
          mvn ${DEPLOY} ${REPOSITORY} ${POM} ${JAR} ${SRC} ${DOC}
